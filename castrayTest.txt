uniform float     iTime;uniform vec2      viewport;uniform mat4      prjInvMat;uniform mat4      mdlInvMat;vec3 yztozy(vec3 p){    return vec3(p.x,p.z,p.y);}void setupCamera(vec2 uv,out vec3 campos, out vec3 dir){     vec4 camdir = vec4(uv,1,1)*prjInvMat;     camdir = camdir/camdir.w;     vec4 camv = vec4(0,0,0,1);     camv = camv*mdlInvMat;     campos = camv.xyz;     vec4 dirp = camdir*mdlInvMat;     dir = normalize((dirp-camv).xyz);}float sdCube(vec3 p,vec3 b){    vec3 dist = abs(p)- b;    return length(max(dist,0));}float castRayvoid main() {	vec2 uv = gl_FragCoord.xy / viewport;    uv = uv * 2.0 - 1.0;           vec3 pos,ray;    setupCamera(uv,pos,ray);    gl_FragColor = vec4(0,1,1,1);}